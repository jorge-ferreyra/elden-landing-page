---
import Layout from '../layouts/Layout.astro'
---

<Layout title="Elden Ring API - Prueba">
  <main id="mock-main" class="w-full h-[7500px] p-[100px] flex flex-col gap-[40px] items-center">
    <ul id="list-bosses" class="w-full h-[7500px] flex flex-col gap-[40px] items-center">
    </ul>
  </main>
</Layout>

<script>

  const listBosses = document.getElementById('list-bosses')

  fetch('http://localhost:1234/bosses')
    .then(res => res.json())
    .then(data => {
      const bosses = data.bosses
      bosses.forEach(boss => {
        const li = document.createElement('li')

        const infoBoss = document.createElement('article')

        const header = document.createElement('header')
        const subHeader = document.createElement('div')
        const name = document.createElement('h1')
        const tier = document.createElement('p')
        const difficulty = document.createElement('p')
        const svgRunes = document.createElement('img')
        const dropRunes = document.createElement('p')

        const img = document.createElement('img')

        const stats = document.createElement('ul')
        const mainStats = document.createElement('li')
        const listStats = document.createElement('ul')

        const health = document.createElement('li')
        const spanHealth = document.createElement('span')
        const pHealth = document.createElement('p')

        const defense = document.createElement('li')
        const spanDefense = document.createElement('span')
        const pDefense = document.createElement('p')

        const stance = document.createElement('li')
        const spanStance = document.createElement('span')
        const pStance = document.createElement('p')

        const parryable = document.createElement('li')
        const spanParry = document.createElement('span')
        const pParry = document.createElement('p')

        const damage = document.createElement('li')
        const spanDamage = document.createElement('span')
        const pDamage = document.createElement('p')

        spanHealth.textContent = 'Vida:'
        spanDefense.textContent = 'Defensa: '
        spanStance.textContent = 'Postura: '
        spanParry.textContent = 'Parryable: '
        spanDamage.textContent = 'Da√±o: '

        li.className = 'boss-card'
        infoBoss.className = 'information-boss'
        header.className = 'title-boss'
        subHeader.className = 'subtitle-boss'
        name.textContent = boss.name
        name.className = 'name-boss'
        tier.textContent = "Tier: " + boss.tier
        tier.className = 'tier-boss'
        difficulty.textContent = "Dificultad: " + boss.difficulty + '/10'
        difficulty.className = 'difficulty-boss'
        dropRunes.textContent = "Runas: " + boss.dropRunes
        dropRunes.className = 'runes-boss'
        svgRunes.src = 'runes.webp'
        svgRunes.className = 'svg-runes'
        img.src = boss.image
        img.className = 'image-boss'

        if (boss.tier !== 'A') {
          stats.className = 'stats-boss'
          listStats.className = 'list-stats'

          pHealth.textContent = boss.stats.health
          pDefense.textContent = boss.stats.defense
          pStance.textContent = boss.stats.stance
          pParry.textContent = boss.stats.parryable ? 'Si' : 'No'
          pDamage.textContent = boss.stats.damage


          health.appendChild(spanHealth)
          health.appendChild(pHealth)
          defense.appendChild(spanDefense)
          defense.appendChild(pDefense)
          stance.appendChild(spanStance)
          stance.appendChild(pStance)
          parryable.appendChild(spanParry)
          parryable.appendChild(pParry)
          damage.appendChild(spanDamage)
          damage.appendChild(pDamage)
          damage.style.display = 'flex'
          damage.style.gap = '5px'
        }

        listBosses.appendChild(li)
        li.appendChild(infoBoss)
        infoBoss.appendChild(header)
        header.appendChild(name)
        header.appendChild(subHeader)
        subHeader.appendChild(tier)
        subHeader.appendChild(difficulty)
        subHeader.appendChild(dropRunes)
        dropRunes.appendChild(svgRunes)
        li.appendChild(img)

        infoBoss.appendChild(stats)
        stats.appendChild(mainStats)
        mainStats.appendChild(listStats)
        listStats.appendChild(health)
        listStats.appendChild(defense)
        listStats.appendChild(stance)
        listStats.appendChild(parryable)
        stats.appendChild(damage)
      })
    })
</script>

<style is:global>
  .boss-card {
    width: 100%;
    max-height: 400px;
    min-height: 400px;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #AB966F44;
  }

  .title-boss, .subtitle-boss {
    width: fit-content;
    height: fit-content;
    display: flex;
    flex-direction: row;
    align-items: end;
    gap: 20px;
  }

  .name-boss {
    width: fit-content;

    font-size: 24px;
    font-weight: bold;
  }

  .subtitle-boss, .name-boss {
    border-bottom: 1px solid #AB966F;
  }

  .tier-boss, .difficulty-boss, .runes-boss {
    font-weight: bold;
  }

  .runes-boss {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .svg-runes {
    width: 18px;
    height: 18px;
  }
  .image-boss {
    max-width: 600px;
    min-width: 600px;
    height: 380px;
  }

  .information-boss {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 20px;
    color: #AB966F;
  }

  .stats-boss {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .stats-boss span {
    font-weight: bold;
  }

  .list-stats {
    display: flex;
    gap: 20px;
  }

  .list-stats li {
    display: flex;
    gap: 5px;
  }

  @media (max-width: 1850px) {
    .title-boss {
      flex-direction: column;
      align-items: start;
    }
  }

  @media (max-width: 1480px) {
    .image-boss {
      max-width: 500px;
      min-width: 500px;
      height: 316px;
    }
  }
</style>
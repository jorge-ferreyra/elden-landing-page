---
import Layout from '../layouts/Layout.astro'
---

<Layout title={"Elden Ring API - Prueba"}>
  <main id="mock-main" class="w-full h-fit p-[100px] flex flex-col gap-[40px] items-center">
    <ul id="list-bosses" class="w-full h-fit-content flex flex-col gap-[40px] items-center">
    </ul>
  </main>
</Layout>

<script>

  const listBosses = document.getElementById('list-bosses')

  fetch('http://localhost:1234/bosses')
    .then(res => res.json())
    .then(data => {
      const bosses = data.bosses
      bosses.forEach(boss => {
        const li = document.createElement('li')

        const infoBoss = document.createElement('article')

        const header = document.createElement('header')
        const subHeader = document.createElement('div')
        const name = document.createElement('h1')
        const tier = document.createElement('p')
        const difficulty = document.createElement('p')
        const svgRunes = document.createElement('img')
        const dropRunes = document.createElement('p')

        const img = document.createElement('img')
        const img2 = document.createElement('img')
        const containerImage = document.createElement('div')
        const containerImages = document.createElement('div')
        containerImage.className = 'containerImage'
        containerImages.className = 'containerImages'

        const statsTitle = document.createElement('h2')
        const negationsTitle = document.createElement('h2')
        const resistancesTitle = document.createElement('h2')

        statsTitle.className = 'subtitle-stats'
        negationsTitle.className = 'subtitle-stats'
        resistancesTitle.className = 'subtitle-stats'

        statsTitle.textContent = 'Estadisticas bases'
        negationsTitle.textContent = 'Negación de daños'
        resistancesTitle.textContent = 'Resistencias al daño'

        const titlePhase1 = document.createElement('h2')
        const titlePhase2 = document.createElement('h2')
        titlePhase1.className = 'phase-title'
        titlePhase2.className = 'phase-title'

        const phases = document.createElement('article')
        phases.className = 'phases-information'
        const phase1 = document.createElement('div')
        const phase2 = document.createElement('div') 

        titlePhase1.textContent = 'Fase 1'
        titlePhase2.textContent = 'Fase 2'

        const basicStats = document.createElement('div')
        const stats = document.createElement('ul')
        const mainStats = document.createElement('li')
        const listStats = document.createElement('ul')
        const health = document.createElement('li')
        const spanHealth = document.createElement('span')
        const valueHealth = document.createElement('p')
        const defense = document.createElement('li')
        const spanDefense = document.createElement('span')
        const valueDefense = document.createElement('p')
        const stance = document.createElement('li')
        const spanStance = document.createElement('span')
        const valueStance = document.createElement('p')
        const parryable = document.createElement('li')
        const spanParry = document.createElement('span')
        const valueParry = document.createElement('p')
        const damage = document.createElement('li')
        const spanDamage = document.createElement('span')
        const valueDamage = document.createElement('p')

        const negationsStats = document.createElement('div')
        const negations = document.createElement('ul')
        const standard = document.createElement('li')
        const spanStandard = document.createElement('span')
        const valueStandard = document.createElement('p')
        const slash = document.createElement('li')
        const spanSlash = document.createElement('span')
        const valueSlash = document.createElement('p')
        const strike = document.createElement('li')
        const spanStrike = document.createElement('span')
        const valueStrike = document.createElement('p')
        const pierce = document.createElement('li')
        const spanPierce = document.createElement('span')
        const valuePierce = document.createElement('p')
        const magic = document.createElement('li')
        const spanMagic = document.createElement('span')
        const valueMagic = document.createElement('p')
        const fire = document.createElement('li')
        const spanFire = document.createElement('span')
        const valueFire = document.createElement('p')
        const lightning = document.createElement('li')
        const spanLightning = document.createElement('span')
        const valueLightning = document.createElement('p')
        const holy = document.createElement('li')
        const spanHoly = document.createElement('span')
        const valueHoly = document.createElement('p')

        const svgStandard = document.createElement('img')
        const svgSlash = document.createElement('img')
        const svgStrike = document.createElement('img')
        const svgPierce = document.createElement('img')
        const svgMagic = document.createElement('img')
        const svgFire = document.createElement('img')
        const svgLightning = document.createElement('img')
        const svgHoly = document.createElement('img')

        const resistancesStats = document.createElement('div')
        const resistances = document.createElement('ul')
        const poison = document.createElement('li')
        const spanPoison = document.createElement('span')
        const valuePoison = document.createElement('p')
        const scarletRot = document.createElement('li')
        const spanScarletRot = document.createElement('span')
        const valueScarletRot = document.createElement('p')
        const hemorrhage = document.createElement('li')
        const spanHemorrhage = document.createElement('span')
        const valueHemorrhage = document.createElement('p')
        const frostbite = document.createElement('li')
        const spanFrostbite = document.createElement('span')
        const valueFrostbite = document.createElement('p')
        const sleep = document.createElement('li')
        const spanSleep = document.createElement('span')
        const valueSleep = document.createElement('p')
        const madness = document.createElement('li')
        const spanMadness = document.createElement('span')
        const valueMadness = document.createElement('p')
        const deathBlight = document.createElement('li')
        const spanDeathBlight = document.createElement('span')
        const valueDeathBlight = document.createElement('p')

        const damageGeneral = document.createElement('div')
        damageGeneral.className = 'damage-general'

        const svgPoison = document.createElement('img')
        const svgScarletRot = document.createElement('img')
        const svgHemorrhage = document.createElement('img')
        const svgFrostbite = document.createElement('img')
        const svgSleep = document.createElement('img')
        const svgMadness = document.createElement('img')
        const svgDeathBlight = document.createElement('img')

        basicStats.className = 'basic-stats'
        negationsStats.className = 'negations-stats'
        resistancesStats.className = 'resistances-stats'

        svgPoison.src = 'poison.webp'
        svgScarletRot.src = 'scarletRot.webp'
        svgHemorrhage.src = 'hemorrhage.webp'
        svgFrostbite.src = 'frostbite.webp'
        svgSleep.src = 'sleep.webp'
        svgMadness.src = 'madness.webp'
        svgDeathBlight.src = 'deathBlight.webp'

        svgStandard.src = 'standard.webp'
        svgSlash.src = 'slash.webp'
        svgStrike.src = 'strike.webp'
        svgPierce.src = 'pierce.webp'
        svgMagic.src = 'magic.webp'
        svgFire.src = 'fire.webp'
        svgLightning.src = 'lightning.webp'
        svgHoly.src = 'holy.webp'

        spanHealth.textContent = 'Vida:'
        spanDefense.textContent = 'Defensa: '
        spanStance.textContent = 'Postura: '
        spanParry.textContent = 'Parryable: '
        spanDamage.textContent = 'Daño: '

        spanStandard.textContent = 'Estándar: '
        spanSlash.textContent = 'Cortante: '
        spanStrike.textContent = 'Contundente: '
        spanPierce.textContent = 'Perforante: '
        spanMagic.textContent = 'Mágico: '
        spanFire.textContent = 'Fuego: '
        spanLightning.textContent = 'Rayo: '
        spanHoly.textContent = 'Santo: '

        spanPoison.textContent = 'Veneno: '
        spanScarletRot.textContent = 'Podredumbre Escarlata: '
        spanHemorrhage.textContent = 'Hemorragia: '
        spanFrostbite.textContent = 'Congelación: '
        spanSleep.textContent = 'Sueño: '
        spanMadness.textContent = 'Locura: '
        spanDeathBlight.textContent = 'Plaga de muerte: '

        if(boss.tier !== 'A') {
          li.className = 'boss-card'
        } else {
          li.className = 'boss-card-a'
        }
        if(boss.tier === 'A') {
          infoBoss.className = 'information-boss-a'
        } else {
          infoBoss.className = 'information-boss'
        }
        header.className = 'title-boss'
        subHeader.className = 'subtitle-boss'
        const nameBoss = boss.name

        window.addEventListener('load', () => {
          if(nameBoss.includes('/') && window.innerWidth <= 1500) {
            const [parte1, parte2] = nameBoss.split('/')
            name.innerHTML = `${parte1}<br>${parte2}`
          } else {
            name.textContent = nameBoss
          }
        })
        window.addEventListener('resize', () => {
          if(nameBoss.includes('/') && window.innerWidth <= 1500) {
            const [parte1, parte2] = nameBoss.split('/')
            name.innerHTML = `${parte1}<br>${parte2}`
          } else {
            name.textContent = nameBoss
          }
        })

        name.className = 'name-boss'
        tier.textContent = "Tier: " + boss.tier
        tier.className = 'tier-boss'
        difficulty.textContent = "Dificultad: " + boss.difficulty + '/10'
        difficulty.className = 'difficulty-boss'
        dropRunes.textContent = "Runas: " + boss.dropRunes
        dropRunes.className = 'runes-boss'
        svgRunes.src = 'runes.webp'
        svgRunes.className = 'svg-runes'
        img.src = boss.image
        img.className = 'image-boss'
        if(boss.tier === 'A') {
          img2.src = boss.image2
          img2.className = 'image-boss'
        }

        listBosses.appendChild(li)
        li.appendChild(infoBoss)
        infoBoss.appendChild(header)
        header.appendChild(name)
        header.appendChild(subHeader)
        subHeader.appendChild(tier)
        subHeader.appendChild(difficulty)
        subHeader.appendChild(dropRunes)
        dropRunes.appendChild(svgRunes)
    
        if (boss.tier === 'A') {
          infoBoss.appendChild(containerImages)
          containerImages.appendChild(img)
          containerImages.appendChild(img2)
        } else {
          infoBoss.appendChild(containerImage)
          containerImage.appendChild(img)
        }

        if (boss.tier !== 'A') {
          stats.className = 'stats-boss'
          listStats.className = 'list-stats'
          negations.className = 'negations-boss'
          resistances.className = 'resistances-boss'

          valueHealth.textContent = boss.stats.health
          valueDefense.textContent = boss.stats.defense
          valueStance.textContent = boss.stats.stance
          valueParry.textContent = boss.stats.parryable ? 'Si' : 'No'
          valueDamage.textContent = boss.stats.damage

          valueStandard.textContent = boss.stats.negations.standard
          valueSlash.textContent = boss.stats.negations.slash
          valueStrike.textContent = boss.stats.negations.strike
          valuePierce.textContent = boss.stats.negations.pierce
          valueMagic.textContent = boss.stats.negations.magic
          valueFire.textContent = boss.stats.negations.fire
          valueLightning.textContent = boss.stats.negations.lightning
          valueHoly.textContent = boss.stats.negations.holy

          valuePoison.textContent = boss.stats.resistances.poison
          valueScarletRot.textContent = boss.stats.resistances.scarletRot
          valueHemorrhage.textContent = boss.stats.resistances.hemorrhage
          valueFrostbite.textContent = boss.stats.resistances.frostbite
          valueSleep.textContent = boss.stats.resistances.sleep
          valueMadness.textContent = boss.stats.resistances.madness
          valueDeathBlight.textContent = boss.stats.resistances.deathBlight


          health.appendChild(spanHealth)
          health.appendChild(valueHealth)
          defense.appendChild(spanDefense)
          defense.appendChild(valueDefense)
          stance.appendChild(spanStance)
          stance.appendChild(valueStance)
          parryable.appendChild(spanParry)
          parryable.appendChild(valueParry)
          damage.appendChild(spanDamage)
          damage.appendChild(valueDamage)
          damage.style.display = 'flex'
          damage.style.gap = '5px'

          standard.appendChild(svgStandard)
          standard.appendChild(spanStandard)
          standard.appendChild(valueStandard)
          slash.appendChild(svgSlash)
          slash.appendChild(spanSlash)
          slash.appendChild(valueSlash)
          strike.appendChild(svgStrike)
          strike.appendChild(spanStrike)
          strike.appendChild(valueStrike)
          pierce.appendChild(svgPierce)
          pierce.appendChild(spanPierce)
          pierce.appendChild(valuePierce)
          magic.appendChild(svgMagic)
          magic.appendChild(spanMagic)
          magic.appendChild(valueMagic)
          fire.appendChild(svgFire)
          fire.appendChild(spanFire)
          fire.appendChild(valueFire)
          lightning.appendChild(svgLightning)
          lightning.appendChild(spanLightning)
          lightning.appendChild(valueLightning)
          holy.appendChild(svgHoly)
          holy.appendChild(spanHoly)
          holy.appendChild(valueHoly)

          poison.appendChild(svgPoison)
          poison.appendChild(spanPoison)
          poison.appendChild(valuePoison)
          scarletRot.appendChild(svgScarletRot)
          scarletRot.appendChild(spanScarletRot)
          scarletRot.appendChild(valueScarletRot)
          hemorrhage.appendChild(svgHemorrhage)
          hemorrhage.appendChild(spanHemorrhage)
          hemorrhage.appendChild(valueHemorrhage)
          frostbite.appendChild(svgFrostbite)
          frostbite.appendChild(spanFrostbite)
          frostbite.appendChild(valueFrostbite)
          sleep.appendChild(svgSleep)
          sleep.appendChild(spanSleep)
          sleep.appendChild(valueSleep)
          madness.appendChild(svgMadness)
          madness.appendChild(spanMadness)
          madness.appendChild(valueMadness)
          deathBlight.appendChild(svgDeathBlight)
          deathBlight.appendChild(spanDeathBlight)
          deathBlight.appendChild(valueDeathBlight)

          infoBoss.appendChild(basicStats)
          basicStats.appendChild(statsTitle)
          basicStats.appendChild(stats)
          stats.appendChild(mainStats)
          mainStats.appendChild(listStats)
          listStats.appendChild(health)
          listStats.appendChild(defense)
          listStats.appendChild(stance)
          listStats.appendChild(parryable)
          stats.appendChild(damage)


          infoBoss.appendChild(damageGeneral)
          damageGeneral.appendChild(negationsStats)
          negationsStats.appendChild(negationsTitle)
          negationsStats.appendChild(negations)
          negations.appendChild(standard)
          negations.appendChild(slash)
          negations.appendChild(strike)
          negations.appendChild(pierce)
          negations.appendChild(magic)
          negations.appendChild(fire)
          negations.appendChild(lightning)
          negations.appendChild(holy)

          infoBoss.appendChild(damageGeneral)
          damageGeneral.appendChild(resistancesStats)
          resistancesStats.appendChild(resistancesTitle)
          resistancesStats.appendChild(resistances)
          resistances.appendChild(poison)
          resistances.appendChild(scarletRot)
          resistances.appendChild(hemorrhage)
          resistances.appendChild(frostbite)
          resistances.appendChild(sleep)
          resistances.appendChild(madness)
          resistances.appendChild(deathBlight)
        } else {
          infoBoss.appendChild(phase1)
          infoBoss.appendChild(phase2)
          phase1.appendChild(titlePhase1)
          phase2.appendChild(titlePhase2)

          phase1.className = 'phase-one'
          phase2.className = 'phase-two'

          boss.phases.forEach(phase => {
            const statsTitle2 = document.createElement('h2')
            const negationsTitle2 = document.createElement('h2')
            const resistancesTitle2 = document.createElement('h2')
            statsTitle2.className = 'subtitle-stats'
            negationsTitle2.className = 'subtitle-stats'
            resistancesTitle2.className = 'subtitle-stats'
            statsTitle2.textContent = 'Estadisticas bases'
            negationsTitle2.textContent = 'Negación de daños'
            resistancesTitle2.textContent = 'Resistencias al daño'
            stats.className = 'stats-boss'
            listStats.className = 'list-stats'
            negations.className = 'negations-boss'
            resistances.className = 'resistances-boss'
            if(phase.phase === 1){
              valueHealth.textContent = phase.stats.health
              valueDefense.textContent = phase.stats.defense
              valueStance.textContent = phase.stats.stance
              valueParry.textContent = phase.stats.parryable ? 'Si' : 'No'
              valueDamage.textContent = phase.stats.damage

              valueStandard.textContent = phase.stats.negations.standard
              valueSlash.textContent = phase.stats.negations.slash
              valueStrike.textContent = phase.stats.negations.strike
              valuePierce.textContent = phase.stats.negations.pierce
              valueMagic.textContent = phase.stats.negations.magic
              valueFire.textContent = phase.stats.negations.fire
              valueLightning.textContent = phase.stats.negations.lightning
              valueHoly.textContent = phase.stats.negations.holy

              valuePoison.textContent = phase.stats.resistances.poison
              valueScarletRot.textContent = phase.stats.resistances.scarletRot
              valueHemorrhage.textContent = phase.stats.resistances.hemorrhage
              valueFrostbite.textContent = phase.stats.resistances.frostbite
              valueSleep.textContent = phase.stats.resistances.sleep
              valueMadness.textContent = phase.stats.resistances.madness
              valueDeathBlight.textContent = phase.stats.resistances.deathBlight


              health.appendChild(spanHealth)
              health.appendChild(valueHealth)
              defense.appendChild(spanDefense)
              defense.appendChild(valueDefense)
              stance.appendChild(spanStance)
              stance.appendChild(valueStance)
              parryable.appendChild(spanParry)
              parryable.appendChild(valueParry)
              damage.appendChild(spanDamage)
              damage.appendChild(valueDamage)
              damage.style.display = 'flex'
              damage.style.gap = '5px'

              standard.appendChild(svgStandard)
              standard.appendChild(spanStandard)
              standard.appendChild(valueStandard)
              slash.appendChild(svgSlash)
              slash.appendChild(spanSlash)
              slash.appendChild(valueSlash)
              strike.appendChild(svgStrike)
              strike.appendChild(spanStrike)
              strike.appendChild(valueStrike)
              pierce.appendChild(svgPierce)
              pierce.appendChild(spanPierce)
              pierce.appendChild(valuePierce)
              magic.appendChild(svgMagic)
              magic.appendChild(spanMagic)
              magic.appendChild(valueMagic)
              fire.appendChild(svgFire)
              fire.appendChild(spanFire)
              fire.appendChild(valueFire)
              lightning.appendChild(svgLightning)
              lightning.appendChild(spanLightning)
              lightning.appendChild(valueLightning)
              holy.appendChild(svgHoly)
              holy.appendChild(spanHoly)
              holy.appendChild(valueHoly)

              poison.appendChild(svgPoison)
              poison.appendChild(spanPoison)
              poison.appendChild(valuePoison)
              scarletRot.appendChild(svgScarletRot)
              scarletRot.appendChild(spanScarletRot)
              scarletRot.appendChild(valueScarletRot)
              hemorrhage.appendChild(svgHemorrhage)
              hemorrhage.appendChild(spanHemorrhage)
              hemorrhage.appendChild(valueHemorrhage)
              frostbite.appendChild(svgFrostbite)
              frostbite.appendChild(spanFrostbite)
              frostbite.appendChild(valueFrostbite)
              sleep.appendChild(svgSleep)
              sleep.appendChild(spanSleep)
              sleep.appendChild(valueSleep)
              madness.appendChild(svgMadness)
              madness.appendChild(spanMadness)
              madness.appendChild(valueMadness)
              deathBlight.appendChild(svgDeathBlight)
              deathBlight.appendChild(spanDeathBlight)
              deathBlight.appendChild(valueDeathBlight)

              phase1.appendChild(basicStats)
              basicStats.appendChild(statsTitle)
              basicStats.appendChild(stats)
              stats.appendChild(mainStats)
              mainStats.appendChild(listStats)
              listStats.appendChild(health)
              listStats.appendChild(defense)
              listStats.appendChild(stance)
              listStats.appendChild(parryable)
              stats.appendChild(damage)

              phase1.appendChild(negationsStats)
              negationsStats.appendChild(negationsTitle)
              negationsStats.appendChild(negations)
              negations.appendChild(standard)
              negations.appendChild(slash)
              negations.appendChild(strike)
              negations.appendChild(pierce)
              negations.appendChild(magic)
              negations.appendChild(fire)
              negations.appendChild(lightning)
              negations.appendChild(holy)

              phase1.appendChild(resistancesStats)
              resistancesStats.appendChild(resistancesTitle)
              resistancesStats.appendChild(resistances)
              resistances.appendChild(poison)
              resistances.appendChild(scarletRot)
              resistances.appendChild(hemorrhage)
              resistances.appendChild(frostbite)
              resistances.appendChild(sleep)
              resistances.appendChild(madness)
              resistances.appendChild(deathBlight)
            } else if (phase.phase === 2) {
              const basicStats2 = document.createElement('div')
              const stats2 = document.createElement('ul')
              const mainStats2 = document.createElement('li')
              const listStats2 = document.createElement('ul')
              const health2 = document.createElement('li')
              const spanHealth2 = document.createElement('span')
              const valueHealth2 = document.createElement('p')
              const defense2 = document.createElement('li')
              const spanDefense2 = document.createElement('span')
              const valueDefense2 = document.createElement('p')
              const stance2 = document.createElement('li')
              const spanStance2 = document.createElement('span')
              const valueStance2 = document.createElement('p')
              const parryable2 = document.createElement('li')
              const spanParry2 = document.createElement('span')
              const valueParry2 = document.createElement('p')
              const damage2 = document.createElement('li')
              const spanDamage2 = document.createElement('span')
              const valueDamage2 = document.createElement('p')

              const negationsStats2 = document.createElement('div')
              const negations2 = document.createElement('ul')
              const standard2 = document.createElement('li')
              const spanStandard2 = document.createElement('span')
              const valueStandard2 = document.createElement('p')
              const slash2 = document.createElement('li')
              const spanSlash2 = document.createElement('span')
              const valueSlash2 = document.createElement('p')
              const strike2 = document.createElement('li')
              const spanStrike2 = document.createElement('span')
              const valueStrike2 = document.createElement('p')
              const pierce2 = document.createElement('li')
              const spanPierce2 = document.createElement('span')
              const valuePierce2 = document.createElement('p')
              const magic2 = document.createElement('li')
              const spanMagic2 = document.createElement('span')
              const valueMagic2 = document.createElement('p')
              const fire2 = document.createElement('li')
              const spanFire2 = document.createElement('span')
              const valueFire2 = document.createElement('p')
              const lightning2 = document.createElement('li')
              const spanLightning2 = document.createElement('span')
              const valueLightning2 = document.createElement('p')
              const holy2 = document.createElement('li')
              const spanHoly2 = document.createElement('span')
              const valueHoly2 = document.createElement('p')

              const svgStandard2 = document.createElement('img')
              const svgSlash2 = document.createElement('img')
              const svgStrike2 = document.createElement('img')
              const svgPierce2 = document.createElement('img')
              const svgMagic2 = document.createElement('img')
              const svgFire2 = document.createElement('img')
              const svgLightning2 = document.createElement('img')
              const svgHoly2 = document.createElement('img')

              const resistancesStats2 = document.createElement('div')
              const resistances2 = document.createElement('ul')
              const poison2 = document.createElement('li')
              const spanPoison2 = document.createElement('span')
              const valuePoison2 = document.createElement('p')
              const scarletRot2 = document.createElement('li')
              const spanScarletRot2 = document.createElement('span')
              const valueScarletRot2 = document.createElement('p')
              const hemorrhage2 = document.createElement('li')
              const spanHemorrhage2 = document.createElement('span')
              const valueHemorrhage2 = document.createElement('p')
              const frostbite2 = document.createElement('li')
              const spanFrostbite2 = document.createElement('span')
              const valueFrostbite2 = document.createElement('p')
              const sleep2 = document.createElement('li')
              const spanSleep2 = document.createElement('span')
              const valueSleep2 = document.createElement('p')
              const madness2 = document.createElement('li')
              const spanMadness2 = document.createElement('span')
              const valueMadness2 = document.createElement('p')
              const deathBlight2 = document.createElement('li')
              const spanDeathBlight2 = document.createElement('span')
              const valueDeathBlight2 = document.createElement('p')

              const svgPoison2 = document.createElement('img')
              const svgScarletRot2 = document.createElement('img')
              const svgHemorrhage2 = document.createElement('img')
              const svgFrostbite2 = document.createElement('img')
              const svgSleep2 = document.createElement('img')
              const svgMadness2 = document.createElement('img')
              const svgDeathBlight2 = document.createElement('img')

              basicStats2.className = 'basic-stats'
              negationsStats2.className = 'negations-stats'
              resistancesStats2.className = 'resistances-stats'

              stats2.className = 'stats-boss'
              listStats2.className = 'list-stats'
              negations2.className = 'negations-boss'
              resistances2.className = 'resistances-boss'

              svgPoison2.src = 'poison.webp'
              svgScarletRot2.src = 'scarletRot.webp'
              svgHemorrhage2.src = 'hemorrhage.webp'
              svgFrostbite2.src = 'frostbite.webp'
              svgSleep2.src = 'sleep.webp'
              svgMadness2.src = 'madness.webp'
              svgDeathBlight2.src = 'deathBlight.webp'

              svgStandard2.src = 'standard.webp'
              svgSlash2.src = 'slash.webp'
              svgStrike2.src = 'strike.webp'
              svgPierce2.src = 'pierce.webp'
              svgMagic2.src = 'magic.webp'
              svgFire2.src = 'fire.webp'
              svgLightning2.src = 'lightning.webp'
              svgHoly2.src = 'holy.webp'

              spanHealth2.textContent = 'Vida:'
              spanDefense2.textContent = 'Defensa: '
              spanStance2.textContent = 'Postura: '
              spanParry2.textContent = 'Parryable: '
              spanDamage2.textContent = 'Daño: '

              spanStandard2.textContent = 'Estándar: '
              spanSlash2.textContent = 'Cortante: '
              spanStrike2.textContent = 'Contundente: '
              spanPierce2.textContent = 'Perforante: '
              spanMagic2.textContent = 'Mágico: '
              spanFire2.textContent = 'Fuego: '
              spanLightning2.textContent = 'Rayo: '
              spanHoly2.textContent = 'Santo: '

              spanPoison2.textContent = 'Veneno: '
              spanScarletRot2.textContent = 'Podredumbre Escarlata: '
              spanHemorrhage2.textContent = 'Hemorragia: '
              spanFrostbite2.textContent = 'Congelación: '
              spanSleep2.textContent = 'Sueño: '
              spanMadness2.textContent = 'Locura: '
              spanDeathBlight2.textContent = 'Plaga de muerte: '
              stats2.className = 'stats-boss'
              listStats2.className = 'list-stats'
              negations2.className = 'negations-boss'
              resistances2.className = 'resistances-boss'

              valueHealth2.textContent = phase.stats.health
              valueDefense2.textContent = phase.stats.defense
              valueStance2.textContent = phase.stats.stance
              valueParry2.textContent = phase.stats.parryable ? 'Si' : 'No'
              valueDamage2.textContent = phase.stats.damage

              valueStandard2.textContent = phase.stats.negations.standard
              valueSlash2.textContent = phase.stats.negations.slash
              valueStrike2.textContent = phase.stats.negations.strike
              valuePierce2.textContent = phase.stats.negations.pierce
              valueMagic2.textContent = phase.stats.negations.magic
              valueFire2.textContent = phase.stats.negations.fire
              valueLightning2.textContent = phase.stats.negations.lightning
              valueHoly2.textContent = phase.stats.negations.holy

              valuePoison2.textContent = phase.stats.resistances.poison
              valueScarletRot2.textContent = phase.stats.resistances.scarletRot
              valueHemorrhage2.textContent = phase.stats.resistances.hemorrhage
              valueFrostbite2.textContent = phase.stats.resistances.frostbite
              valueSleep2.textContent = phase.stats.resistances.sleep
              valueMadness2.textContent = phase.stats.resistances.madness
              valueDeathBlight2.textContent = phase.stats.resistances.deathBlight


              health2.appendChild(spanHealth2)
              health2.appendChild(valueHealth2)
              defense2.appendChild(spanDefense2)
              defense2.appendChild(valueDefense2)
              stance2.appendChild(spanStance2)
              stance2.appendChild(valueStance2)
              parryable2.appendChild(spanParry2)
              parryable2.appendChild(valueParry2)
              damage2.appendChild(spanDamage2)
              damage2.appendChild(valueDamage2)
              damage2.style.display = 'flex'
              damage2.style.gap = '5px'

              standard2.appendChild(svgStandard2)
              standard2.appendChild(spanStandard2)
              standard2.appendChild(valueStandard2)
              slash2.appendChild(svgSlash2)
              slash2.appendChild(spanSlash2)
              slash2.appendChild(valueSlash2)
              strike2.appendChild(svgStrike2)
              strike2.appendChild(spanStrike2)
              strike2.appendChild(valueStrike2)
              pierce2.appendChild(svgPierce2)
              pierce2.appendChild(spanPierce2)
              pierce2.appendChild(valuePierce2)
              magic2.appendChild(svgMagic2)
              magic2.appendChild(spanMagic2)
              magic2.appendChild(valueMagic2)
              fire2.appendChild(svgFire2)
              fire2.appendChild(spanFire2)
              fire2.appendChild(valueFire2)
              lightning2.appendChild(svgLightning2)
              lightning2.appendChild(spanLightning2)
              lightning2.appendChild(valueLightning2)
              holy2.appendChild(svgHoly2)
              holy2.appendChild(spanHoly2)
              holy2.appendChild(valueHoly2)

              poison2.appendChild(svgPoison2)
              poison2.appendChild(spanPoison2)
              poison2.appendChild(valuePoison2)
              scarletRot2.appendChild(svgScarletRot2)
              scarletRot2.appendChild(spanScarletRot2)
              scarletRot2.appendChild(valueScarletRot2)
              hemorrhage2.appendChild(svgHemorrhage2)
              hemorrhage2.appendChild(spanHemorrhage2)
              hemorrhage2.appendChild(valueHemorrhage2)
              frostbite2.appendChild(svgFrostbite2)
              frostbite2.appendChild(spanFrostbite2)
              frostbite2.appendChild(valueFrostbite2)
              sleep2.appendChild(svgSleep2)
              sleep2.appendChild(spanSleep2)
              sleep2.appendChild(valueSleep2)
              madness2.appendChild(svgMadness2)
              madness2.appendChild(spanMadness2)
              madness2.appendChild(valueMadness2)
              deathBlight2.appendChild(svgDeathBlight2)
              deathBlight2.appendChild(spanDeathBlight2)
              deathBlight2.appendChild(valueDeathBlight2)

              phase2.appendChild(basicStats2)
              basicStats2.appendChild(statsTitle2)
              basicStats2.appendChild(stats2)
              stats2.appendChild(mainStats2)
              mainStats2.appendChild(listStats2)
              listStats2.appendChild(health2)
              listStats2.appendChild(defense2)
              listStats2.appendChild(stance2)
              listStats2.appendChild(parryable2)
              stats2.appendChild(damage2)

              phase2.appendChild(negationsStats2)
              negationsStats2.appendChild(negationsTitle2)
              negationsStats2.appendChild(negations2)
              negations2.appendChild(standard2)
              negations2.appendChild(slash2)
              negations2.appendChild(strike2)
              negations2.appendChild(pierce2)
              negations2.appendChild(magic2)
              negations2.appendChild(fire2)
              negations2.appendChild(lightning2)
              negations2.appendChild(holy2)

              phase2.appendChild(resistancesStats2)
              resistancesStats2.appendChild(resistancesTitle2)
              resistancesStats2.appendChild(resistances2)
              resistances2.appendChild(poison2)
              resistances2.appendChild(scarletRot2)
              resistances2.appendChild(hemorrhage2)
              resistances2.appendChild(frostbite2)
              resistances2.appendChild(sleep2)
              resistances2.appendChild(madness2)
              resistances2.appendChild(deathBlight2)
            }
          })
        }
      })
    })
</script>

<style is:global>
  .boss-card {
    width: 100%;
    max-height: fit-content;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #AB966F44;
  }

  .boss-card-a {
    width: 100%;
    max-height: fit-content;
    min-height: 1000px;
    padding: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #AB966F44;
  }

  .containerImage {
    grid-column: 2;
    grid-row: span 3;
    width: 670px;
    display: flex;
    flex-direction: column;
    gap: 100px;
    justify-content: center;
  }

  .containerImages {
    grid-column: 2;
    grid-row: span 3;
    width: 670px;
    display: flex;
    flex-direction: column;
    gap: 100px;
    justify-content: center;
  }

  .image-boss {
    width: 100%;
    height: 80%;
  }

  .title-boss, .subtitle-boss {
    width: fit-content;
    height: fit-content;
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    gap: 20px;
  }

  .name-boss {
    width: fit-content;
    font-size: 24px;
    font-weight: bold;
  }

  .subtitle-boss, .name-boss {
    border-bottom: 1px solid #AB966F;
  }

  .tier-boss, .difficulty-boss, .runes-boss {
    font-weight: bold;
  }

  .runes-boss {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .svg-runes {
    width: 18px;
    height: 18px;
  }

  .information-boss {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 3fr 2fr;
    grid-template-rows: 50px 120px 270px;
    color: #AB966F;
  }

  .information-boss-a {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 3fr 2fr;
    grid-template-rows: 1fr 7fr 7fr;
    color: #AB966F;
  }

  .phase-one {
    grid-row: 2;
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 40px;
  }

  .phase-two {
    grid-row: 3;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .phase-title {
    font-weight: bold;
    font-size: 30px;
  }

  .subtitle-stats {
    font-weight: bold;
    font-size: 20px;
    width: fit-content;
    border-bottom: 1px solid #AB966F;
  }

  .basic-stats {
    grid-row: 2;
    width: fit-content;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .stats-boss {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .stats-boss span {
    font-weight: bold;
  }

  .list-stats {
    display: flex;
    gap: 20px;
  }

  .list-stats li {
    display: flex;
    gap: 5px;
  }

  .damage-general {
    grid-row: 3;
    display: flex;
    flex-direction: column;
    gap: 20px;
    justify-content: center;
  }

  .negations-stats {
    width: 760px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .negations-boss {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(4, minmax(100px, 200px));
    gap: 5px;
  }

  .negations-boss li {
    width: fit-content;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 5px;
  }

  .negations-boss li img {
    width: 25px;
    height: 25px;
  }

  .negations-boss li span {
    font-weight: bold;
  }

  .resistances-stats {
    width: 760px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .resistances-boss {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .resistances-boss li {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  @media (max-width: 1897px) {
    .title-boss {
      flex-direction: column;
      align-items: start;
      gap: 4px;
    }
    .information-boss {
    grid-template-rows: 80px 120px 270px;
    }
  }

  @media (max-width: 1670px) {
    .containerImage {
      width: 600px;
      display: flex;
      align-items: center;
    }
    .image-boss {
      height: 70%;
    }
  }

  @media (max-width: 1600px) {
    .information-boss {
      grid-template-columns: 50% 50%;
      grid-template-rows: 80px 200px 200px;
    }
    .list-stats {
      flex-direction: column;
      gap: 10px;
    }
    .basic-stats {
      gap: 10px;
    }
    .damage-general {
      flex-direction: row;
      width: 100%;
      grid-column: span 2;
      justify-content: unset;
    }
    .containerImage {
      width: 100%;
      grid-row: span 2;
    }
    .image-boss {
      height: 100%;
    }
    .negations-stats {
      width: 640px;
      margin-top: 20px;
      margin-right: 18px;
    }
    .negations-boss {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }
    .resistances-stats {
      margin-top: 20px;
      width: 660px;
      grid-row: 3;
      grid-column: 2;
    }
  }

  @media (max-width: 1510px) {
    .information-boss {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }
    .title-boss {
      width: 100%;
      flex-direction: row;
      align-items: flex-end;
      justify-content: center;
      gap: 20px;
    }
    .list-stats {
      flex-direction: row;
      gap: 20px;
    }
    .containerImage {
      width: 100%;
    }
    .image-boss {
      width: 80%;
    }
    .basic-stats {
      margin-top: 0;
    }
    .damage-general {
      flex-direction: column;
    }
    .negations-stats {
      width: 820px;
      margin-top: 0;
      margin-right: 0;
    }
    .negations-boss {
      grid-template-columns: repeat(4, minmax(100px, 200px));;
    }
    .resistances-stats {
      width: fit-content;
      margin-top: 0;
    }
    .resistances-boss {
      grid-template-columns: 300px 380px;
    }
  }
  @media (max-width: 1226px) {
    .boss-card:nth-child(5) h1 {
        font-size: 14px;
    }
  }

  @media (max-width: 1040px) {
    .boss-card p, .boss-card span {
      font-size: 14px;
    }
    .image-boss {
      min-width: 400px;
    }
    .boss-card h1 {
      font-size: 22px;
    }
    .boss-card h2 {
      font-size: 18px;
    }
    .information-boss {
      gap: 10px;
    }
    .negations-stats {
      width: 750px;
    }
  }

  @media (max-width: 930px) {
    .boss-card p, .boss-card span {
      font-size: 12px;
    }
    .boss-card h1 {
      font-size: 20px;
    }
    .boss-card h2 {
      font-size: 16px;
    }
    .negations-boss {
      grid-template-columns: 280px 280px;
      grid-template-rows: 1fr 1fr 1fr 1fr;
    }
    .resistances-boss {
      grid-template-columns: 260px 280px;
    }
  }

  @media (max-width: 791px) {
    .boss-card p, .boss-card span {
      font-size: 11px;
    }
    .boss-card h1 {
      font-size: 18px;
    }
    .boss-card h2 {
      font-size: 15px;
    }
    .negations-boss {
      grid-template-columns: 280px;
      grid-template-rows: repeat(8, 1fr);
    }
    .resistances-boss {
      grid-template-columns: 300px;
      grid-template-rows: repeat(7, 1fr);
    }
    .boss-card:nth-child(7) {
        && .negations-stats {
        width: 230px;
      }
    }
    .negations-stats {
      width: 180px;
    }
    .resistances-stats {
      width: 260px;
    }
    .damage-general {
      width: 100%;
      display: flex;
      flex-direction: row;
    }
  }

  @media (max-width: 700px) {
    .damage-general {
      flex-direction: column;
    }
    .svg-runes {
      width: 12px;
      height: 12px;
    }
    .image-boss {
      min-width: 200px;
    }
    .title-boss {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 10px;
    }
    .name-boss {
      text-align: center;
    }
  }

  
</style>
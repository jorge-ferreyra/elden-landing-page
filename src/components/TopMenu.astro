---
import ButtonNav from './ButtonNav.astro'
---

<header class="w-full h-[80px] fixed top-0 bg-black z-[2] flex items-center">
  <ul class="w-full h-[40px] flex items-center pr-[300px]">
    <li class="p-[8px] w-[300px] h-full flex justify-center">
      <ButtonNav>
        <span id="span-button" class="translate-x-[-20px] text-[#AB966F] transition-all duration-500 ease-out">Explorar</sp>
      </ButtonNav>
    </li>
    <li class="flex flex-grow justify-center items-center gap-[80px]">
      <a id="navigateIntro" class="bg-[#AB966F] bg-opacity-20 rounded-md text-[#AB966F] p-[6px] cursor-pointer hover:underline" href="#Intro">Inicio</a>
      <a id="navigateEndpoint" class="bg-[#AB966F] bg-opacity-20 rounded-md text-[#AB966F] p-[6px] cursor-pointer hover:underline" href="#Endpoint">Endpoint y Datos</a>
      <a class="bg-[#AB966F] bg-opacity-20 rounded-md text-[#AB966F] p-[6px] cursor-pointer hover:underline" href="/mock">Prueba de un fetch</a>
    </li>
  </ul>
</header>

<script>
  let pathname = window.location.pathname
  const navigateIntro = document.getElementById('navigateIntro')
  const navigateEndpoint = document.getElementById('navigateEndpoint')

  if (pathname === '/mock') {
    navigateIntro.setAttribute('href', '/')
  } else {
    navigateIntro.setAttribute('href', '#Intro')
  }

  const handleTransition = (event, button) => {
    event.preventDefault()
    const targetId = button.getAttribute('href')
    const targetElement = document.querySelector(targetId)
    if (targetElement instanceof HTMLElement) {
      window.scrollTo({ top: targetElement.offsetTop - 80, behavior: 'smooth' })
    }
  }
  navigateIntro.addEventListener('click', () => {
    pathname = window.location.pathname
    if (pathname === '/mock') {
      navigateIntro.setAttribute('href', '/')
    } else {
      navigateIntro.setAttribute('href', '#Intro')
      handleTransition(event, navigateIntro)
    }
  })
  navigateEndpoint.addEventListener('click', () => {
    if (pathname === '/mock') {
    navigateEndpoint.setAttribute('href', '/')
  } else {
    navigateEndpoint.setAttribute('href', '#Endpoint')
    handleTransition(event, navigateEndpoint)
  }
  })
</script>
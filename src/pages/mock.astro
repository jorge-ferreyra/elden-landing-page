---
import Layout from '../layouts/Layout.astro'
---

<Layout title="Elden Ring API - Prueba">
  <main id="mock-main" class="w-full h-[7500px] p-[100px] flex flex-col gap-[40px] items-center">
    <ul id="list-bosses" class="w-full h-[7500px] flex flex-col gap-[40px] items-center">
    </ul>
  </main>
</Layout>

<script>

  const listBosses = document.getElementById('list-bosses')

  fetch('http://localhost:1234/bosses')
    .then(res => res.json())
    .then(data => {
      const bosses = data.bosses
      bosses.forEach(boss => {
        const li = document.createElement('li')

        const infoBoss = document.createElement('article')

        const header = document.createElement('header')
        const subHeader = document.createElement('div')
        const name = document.createElement('h1')
        const tier = document.createElement('p')
        const difficulty = document.createElement('p')
        const svgRunes = document.createElement('img')
        const dropRunes = document.createElement('p')

        const img = document.createElement('img')

        const statsTitle = document.createElement('h2')
        const negationsTitle = document.createElement('h2')

        statsTitle.className = 'subtitle-stats'
        negationsTitle.className = 'subtitle-stats'

        statsTitle.textContent = 'Estadisticas bases'
        negationsTitle.textContent = 'Negación de daños'

        const stats = document.createElement('ul')
        const mainStats = document.createElement('li')
        const listStats = document.createElement('ul')
        const health = document.createElement('li')
        const spanHealth = document.createElement('span')
        const valueHealth = document.createElement('p')
        const defense = document.createElement('li')
        const spanDefense = document.createElement('span')
        const valueDefense = document.createElement('p')
        const stance = document.createElement('li')
        const spanStance = document.createElement('span')
        const valueStance = document.createElement('p')
        const parryable = document.createElement('li')
        const spanParry = document.createElement('span')
        const valueParry = document.createElement('p')
        const damage = document.createElement('li')
        const spanDamage = document.createElement('span')
        const valueDamage = document.createElement('p')

        const negations = document.createElement('ul')
        const standard = document.createElement('li')
        const spanStandard = document.createElement('span')
        const valueStandard = document.createElement('p')
        const slash = document.createElement('li')
        const spanSlash = document.createElement('span')
        const valueSlash = document.createElement('p')
        const strike = document.createElement('li')
        const spanStrike = document.createElement('span')
        const valueStrike = document.createElement('p')
        const pierce = document.createElement('li')
        const spanPierce = document.createElement('span')
        const valuePierce = document.createElement('p')
        const magic = document.createElement('li')
        const spanMagic = document.createElement('span')
        const valueMagic = document.createElement('p')
        const fire = document.createElement('li')
        const spanFire = document.createElement('span')
        const valueFire = document.createElement('p')
        const lightning = document.createElement('li')
        const spanLightning = document.createElement('span')
        const valueLightning = document.createElement('p')
        const holy = document.createElement('li')
        const spanHoly = document.createElement('span')
        const valueHoly = document.createElement('p')

        spanHealth.textContent = 'Vida:'
        spanDefense.textContent = 'Defensa: '
        spanStance.textContent = 'Postura: '
        spanParry.textContent = 'Parryable: '
        spanDamage.textContent = 'Daño: '

        spanStandard.textContent = 'Estándar: '
        spanSlash.textContent = 'Cortante: '
        spanStrike.textContent = 'Contundente: '
        spanPierce.textContent = 'Perforante: '
        spanMagic.textContent = 'Mágico: '
        spanFire.textContent = 'Fuego: '
        spanLightning.textContent = 'Rayo: '
        spanHoly.textContent = 'Santo: '

        li.className = 'boss-card'
        infoBoss.className = 'information-boss'
        header.className = 'title-boss'
        subHeader.className = 'subtitle-boss'
        name.textContent = boss.name
        name.className = 'name-boss'
        tier.textContent = "Tier: " + boss.tier
        tier.className = 'tier-boss'
        difficulty.textContent = "Dificultad: " + boss.difficulty + '/10'
        difficulty.className = 'difficulty-boss'
        dropRunes.textContent = "Runas: " + boss.dropRunes
        dropRunes.className = 'runes-boss'
        svgRunes.src = 'runes.webp'
        svgRunes.className = 'svg-runes'
        img.src = boss.image
        img.className = 'image-boss'

        if (boss.tier !== 'A') {
          stats.className = 'stats-boss'
          listStats.className = 'list-stats'
          negations.className = 'negations-boss'

          valueHealth.textContent = boss.stats.health
          valueDefense.textContent = boss.stats.defense
          valueStance.textContent = boss.stats.stance
          valueParry.textContent = boss.stats.parryable ? 'Si' : 'No'
          valueDamage.textContent = boss.stats.damage

          valueStandard.textContent = boss.stats.negations.standard
          valueSlash.textContent = boss.stats.negations.slash
          valueStrike.textContent = boss.stats.negations.strike
          valuePierce.textContent = boss.stats.negations.pierce
          valueMagic.textContent = boss.stats.negations.magic
          valueFire.textContent = boss.stats.negations.fire
          valueLightning.textContent = boss.stats.negations.lightning
          valueHoly.textContent = boss.stats.negations.holy


          health.appendChild(spanHealth)
          health.appendChild(valueHealth)
          defense.appendChild(spanDefense)
          defense.appendChild(valueDefense)
          stance.appendChild(spanStance)
          stance.appendChild(valueStance)
          parryable.appendChild(spanParry)
          parryable.appendChild(valueParry)
          damage.appendChild(spanDamage)
          damage.appendChild(valueDamage)
          damage.style.display = 'flex'
          damage.style.gap = '5px'

          standard.appendChild(spanStandard)
          standard.appendChild(valueStandard)
          slash.appendChild(spanSlash)
          slash.appendChild(valueSlash)
          strike.appendChild(spanStrike)
          strike.appendChild(valueStrike)
          pierce.appendChild(spanPierce)
          pierce.appendChild(valuePierce)
          magic.appendChild(spanMagic)
          magic.appendChild(valueMagic)
          fire.appendChild(spanFire)
          fire.appendChild(valueFire)
          lightning.appendChild(spanLightning)
          lightning.appendChild(valueLightning)
          holy.appendChild(spanHoly)
          holy.appendChild(valueHoly)
        }

        listBosses.appendChild(li)
        li.appendChild(infoBoss)
        infoBoss.appendChild(header)
        header.appendChild(name)
        header.appendChild(subHeader)
        subHeader.appendChild(tier)
        subHeader.appendChild(difficulty)
        subHeader.appendChild(dropRunes)
        dropRunes.appendChild(svgRunes)
        li.appendChild(img)

        infoBoss.appendChild(statsTitle)
        infoBoss.appendChild(stats)
        stats.appendChild(mainStats)
        mainStats.appendChild(listStats)
        listStats.appendChild(health)
        listStats.appendChild(defense)
        listStats.appendChild(stance)
        listStats.appendChild(parryable)
        stats.appendChild(damage)

        infoBoss.appendChild(negationsTitle)
        infoBoss.appendChild(negations)
        negations.appendChild(standard)
        negations.appendChild(slash)
        negations.appendChild(strike)
        negations.appendChild(pierce)
        negations.appendChild(magic)
        negations.appendChild(fire)
        negations.appendChild(lightning)
        negations.appendChild(holy)
      })
    })
</script>

<style is:global>
  .boss-card {
    width: 100%;
    max-height: 400px;
    min-height: 400px;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #AB966F44;
  }

  .title-boss, .subtitle-boss {
    width: fit-content;
    height: fit-content;
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    gap: 20px;
  }

  .name-boss {
    width: fit-content;

    font-size: 24px;
    font-weight: bold;
  }

  .subtitle-boss, .name-boss {
    border-bottom: 1px solid #AB966F;
  }

  .tier-boss, .difficulty-boss, .runes-boss {
    font-weight: bold;
  }

  .runes-boss {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .svg-runes {
    width: 18px;
    height: 18px;
  }
  .image-boss {
    max-width: 600px;
    min-width: 600px;
    height: 380px;
  }

  .information-boss {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 15px;
    color: #AB966F;
  }

  .subtitle-stats {
    font-weight: bold;
    font-size: 20px;
    width: fit-content;
    border-bottom: 1px solid #AB966F;
  }

  .stats-boss {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .stats-boss span {
    font-weight: bold;
  }

  .list-stats {
    display: flex;
    gap: 20px;
  }

  .list-stats li {
    display: flex;
    gap: 5px;
  }

  .negations-boss {
    width: 50%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 5px;
  }

  .negations-boss li {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .negations-boss li span {
    font-weight: bold;
  }

  @media (max-width: 1850px) {
    .title-boss {
      flex-direction: column;
      align-items: start;
    }
  }

  @media (max-width: 1480px) {
    .image-boss {
      max-width: 500px;
      min-width: 500px;
      height: 316px;
    }
  }
</style>